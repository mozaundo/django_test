gemiimabkgcimfjebhbdmkjodfifchcpgfhbhinhaomfjpaghocjgenbclmoblcpghmaeheefkefmfieecglpeenajbdoacpgjppfapemggbiooneljjjenmammefjcpglcodfjkpciglnkfjaalhncfpbjeiccpglimkcppledlmgadomhnplkndngpkocpgmenfalhdcpenibfmkmpleiebfoppacpgoblgcfemdmaolmfhpoifikehgbjbfcpgocbihinhkfdgfebnppfccfmmefimjcpgogdobolkiehncflgnlmhjmafejocbcpgookopacgjfljboolejoehioclalahcphabojjmeiichlbgioohkmnmflaloldcphbfmlalehdmednklkdeolfedaghkfkcphcjjkglagafhnlkeglmngbgfkngjehcphcnoofbpjllbdplkldfijnlboebpghcphgobccmegkamdlohcojkmpcehocbdfcphhgkkbdffbjecpnhbcjpomcigaklikcphjpocnofedojipljlmjdnpganjibkicphnmpkdacmnpinbcioijhlochabhmbgcphnnfjainnhgejcpgboeeakfkgbkfekcpicpnpejfeiflaflnkihmjgbmffjgfncpiecbgcpgpeplegjpbnaeodnnmlppipcpieliioldegdicikophgdjeihccjgfgcpifklbfimokbkamkgceogppefaddjemcpihabejplilblfllgajbaneocghgpchcpihgjcchnokifihmeegbmabncefkkojcpiiakoibaohkfoaijaigdnocfolnmllcpijopdkppmfagkjeogifaenclofonkicpiknbjhehnnhmiopapklppbogppdnpbcpimfcfpokkicebcgjimeeemfjkhfplkcpimldclklpfifolmdnicjnfbjdepjnfcpimmioeknejfbngonaddkeakkjikhgicpiokhnakkbmbfkheobfpjbieohkjhgccpipiikahijfncihghagcbodjaoclpeacpjbkhbhimkbbekiaelopeddeheljabmcpjcbmgbnfkpkfjhdejmpfpnpgogkbjncpjcijflpjifhaomjbmeikdjgdkefbegcpjdnekhgjdecpmjglkcegchhiijadpbcpjenahkennfeahgbneafodnllhlfifjcpjglhegnmpndgfdhgagbooohdifbpdacpjikoplnbhebpknfcjbidheibgeokfocpjmajgbeckbmefpblnhfbchmhfnnjelcpjopdlhedgkjbbjpbalhoobpjjpehbpcpjpdmkajfmoiidgpigaekeglpapgpcncpkadjppkneapmlkjdickifcimknkfcocpkcfmccmlcgofbcapllblpodbbhljimcpkcjmioafmppmeodhcpglocaipfjhoacpkecmlcacfibfdpanmkbngjnkpjkdhgcpkhnpjljkngfnbjdaffgmpebmbhmjfncpkighhngpddmnfleacaappnkohpahbccpklapmpcmejhnbajlbbhhmgaeapkbihcpkmankgelhiefkokokiblhfonmopmffcpkncohjcimdpplpcljadcglfjlcdcdacpkngcdakogcpfagjlikhniglgakjkjlcpkojgbclmcfkcangfplnaakcmgoamblcpkolchkfnbkbhpojbapkcnhgflcgcbmcpkpigfkogbpjgnkcfpnogoniicdkfepcplefiidjmmilbgcifjepebbfljneghgcpleogjjijojcjgnmmeeplcgejegmflecpleplpildmlgdacjkgppdhkekejcjbicplgocpbdmoidkdkpgnhmkodphikidlccpliffapejacbgjgkoealoeeapibojgkcplipahbiahkpdhmiajnhainacepjcnccpljmnbiencpgbjdilpbffjolgmjonphcplkmaniffppejkfcfgmkipelkgepndccplongfidfpemhbfacflhpbphdegogjocplpbgjchpkomcpkhllcjhfenednbmpecplpboppiiimliahglknofholdjdpflmcplpjadbknogbflmjibalndpigmeekigcpmaalflcpdgeefgaafabalbelbhibakcpmagfldjnkbihebkelpkhaccdhgiemgcpmamecchnickhgbnonpdaeeamjajpamcpmbccdjgdfkmegnpmlemkhpaimceikbcpmbigjfefokcbfmjnfijfbgggbgdgakcpmblcafkokbojejjjbefbjoncdpofnhcpmcafdnchojppopbopdghlkohlfkdmlcpmcecnfhmogggapafdfccphnenollmhcpmcekbfnjnapnimdpclnhjiiocbgbpdcpmcfkfkcclfmhajghimgelkhdcmcificpmdjdlkjokjfpaomfegmjlklimgigbmcpmealkhofbhbedioiemnhjbjgegdielcpmehfcnopeecijpmemcfkgnapinipfccpmemlipmfjljomcaocjchdjggodpciecpmgdbdchhjimcbfbbhlbchbobhjonnacpmjpginjonhleiklomkahffjepmdapocpmmjhhofijdnodgnlljojdlmbiidlfjcpmncocljkcfnecibdohlgachjicjbopcpmnmgmilokfemfoeiiicjhcjgcedhdncpmnphldnchgadpcmhkangfddcafhbihcpmpabiiheheekioaabfjlelembamhiacpmphigfanegpfgjpgdpgjlgocjpnldhcpmpipfpcgkoiedkehiobjidambkldficpmpnmncmbnbehemlnflfmjajhgggloocpmppaeaeolonlmlnaipnmffafemhkjbcpnakbkiecfafongopgpibllaemihlkacpnalpheajoacfemmhhoeoalhjhabbdbcpnbhnfcggadkjafkfofbkgoegjkmdpccpncfdlfbgpdgokjeldafkahdojfbndhcpndipbfcdgmopjeflhdocojlhicifpmcpnefkmcmokiilacdgejmmfgnblcpocacpnflfdkekagbebncpoihkaknjcbckhfcpniilffolhiiigikajmhdhpoliofmhpcpnmclhdbfoahkljmennnlcpjlalfpihcpoaijoncigcbagcjebnmpdlbppidlaocpoakjacanbnemlookbpeeghlgicibgicpobgelohgnelmomlcpfmbjabnefcljacpobppcoiojpficphicelljjejeogcpfcpocekjblmmapbljnchjlhoibkepenogcpodgodbgfoljdgnjbediocncehmjpkmcpoedhibfplemalohenidhlbjfaifnlhcpoemlkchfabfjdfgpmcadfmjefdbecpcpofahokbmjadledfbcdocmbhgkogblbcpofbbgoaeoiiagmlfkkipjmggkedgiccpojadmomnbegjdpnoonbacbimghdfimcpokhfcmgpipfplgbkiecbpcmplgniamcponfomacfllfdpjchnkiecjaklifenmcponnganpehmeadlbfjpleaddmmfjcpdcpooefnpmejmnjdglodibnllillhcfmocppajgpgmceppjpdmfmphebjppcejbkccppbpjmlpbhbeionoopcjkocilmpmmjacppceolchkndfcdjcplpbkjmlbhdoocgcppdackgljohjpnibihagoapbbklnceacppfpoabniapaclkkdajhckoiicfnaplcppgkdfejpojlehimlefpjjaidiijidmcppgkegepalmhghppgpeijkkebmmpckicppgkgldpdahabdghcpkfkieipelmjfkcpphjgnkhfkkpibcdogkmakbenjdopgfcppkcinlfgnjekgchfbdcajppjpahgcicppndcnonoeolinaenhopmebikpcmicpcppodmcamcphompkpimnjcelbbhkipemcppogeekogbladboceekjeiibihnkbhpdaaadidkhlmakbjkgfehkofmihnelddbdaaahjmncejjfjbfekcfkcmdkfaljcdbdaaamkcjcjjelokdkcmieccijddpllaodaadjidecodomenhkcdpegnioojfmdgndaaefhbegbacejlkgbpgelbodhjmeffmdaaeogeeccgimnimijlgehjipgcnmgpcdaaflpgkhlhilafgcfamliomlnfmcbmcdaagnhhppleadbdigenpbkblkaninbhkdaahcnfllicnoljdnilhimkgmnofbmdjdaajbjmagkjfaalhibdiefpdiejmmnaodaalbnlbkepghdajcolejnhlbocjdnfidaaldhfodeiijhifabhaefljjljobbaodaalmnjifkepnehpnnhldecngocnkppmdaaoehmafgjpphnfkapepgpepdkhlkdjdaappnkdciehakmkgjmhaddjmioijhjldabaapopnlnapjhmmbkkkpdefnfjgjjgdabbbaajjpkbhbfklmlmjhjimkegmlindabbffgofielmbcoibiijfcdifaggnkidabcobbkdfbpepadeilkdlpbccpigmaidabcoikfeddnndjeacbaemmcicafmhgcdabdkaiboageaaidpjbffjilnkfdibapdabiflfnooplklnfgaogijdjhlnidmendabiiobmiflampghplngdjngbbefolbadabkapchgmdkcihphgicpalppegkponddabkfbenlgjhhbaepldlmjckkoffkckpdabllfibmelgpimnpndjiaflbmggoichdabmejcejhlhmjkhbcladcmooefndokkdabmgldlegihnkoamljdpkemnmaajcondabndpllomgdfadbmkjhdbmkdikhpjgfdabpdgoeghknjkimeehpgcdjmooncnhbdacachelpoflfefdcaelpcpnfpdegkifdacbeoakimmpbacfgimnjbamnnpampdadaccadekckmjgpohdhmoapnonfhfoejhdacdakbmphaalfginnbfppmpalmgbonldacdiihphhhngakheekcjpdjjffgljnpdacdoijicnfokfhfnpecdhgajbfnmfehdacenfemdjfbcgnabgohleccglllmlmndachagloddnokngokmipniimcmokiodmdaciebjmdliimnapgfijmnobihpmhpigdacjphiffgpodekkecdhdpdcbnpnkdkgdackbfgkakhdamblffhhlofcajoganhndackpajjnbbiojalbmfhdlnffmcgcldkdaclcfglacbdodmjfbchncfnndhininndaclfpimanaggnnnakieflihomlpeilndacohlmdejcbenbfmlknegpahdfmbbdodacoilepomhpdbclphjjibalhgbiedopdacollbbmkejngngdkonkjccppifomegdadacpemkpnjpkdohiobfpeemhpnngigdadaflgjmkallecpafhncjaekomapmekdadcalgappognjbjpalfophhcfakoeacdadcmdgkodnapobeanbkabgcnigaffjbdadfpfgcpjgddidkjlfpomlddomahkfndadiibdpfplpdphocdfgjjefggkafckddadjbfabomocedddihjiabpabbjgbmhadadjdpnalamccpeodkcdmhieeiipphmfdadjjjgdihjannhodknplifcfcinghkndadnfmoeipnlmdlfoioabgopkajneldhdadoboomlhchiadoccglmjianfelcinfdaealfiamljmndpdplfpkbkaljimnamhdaeamjiagmmogfkplnccoidpcdhpheihdaecmhhkihgenmacegfbhgmgfjnemcmmdaecpchmbgbbngohkemdkinihfcmlhlgdaedabdgnmdgelkllomnbmcjjceajdgadaedchlchfkaolgfgmcldcehcbpnikjjdaedlknagalieceeimjicnkobpbnflcndaeeakokinbgclcaahdahdkaglfhopibdaejjcddomfcnkkenjkemclhfbmfokiedaejjicekmhkbpgahnhfmpmjhojhpanedaekcenjokdpceljghnmmkdchfdgpedadaekgogmimkpkaafghifkgpodcjlmbfidaeladgbblhbclkoahcoiejigkpakkjfdaelkplfjmapgnnfnaenhmjmolnmbgiadaeokacmjeinledmogapgddnndhngfbmdaeolookcjhdlgecmfcmbndjmmbfkbladaeppebkefikclglnghfhnodhgnjidbfdaepppplillfjcflfkfhgafjgejfibjhdafaaclpdnhpjanjoaongpnanpoahbmcdafafchgehbfhoobpgbbbgillbjinilbdafaiapjnboakngjebdcgbaabglhjegodafbfdcpodilppejehlcphdjcmcanefmdafbjaojfddcknamegleglagibnmhmcmdafbkjnhamchhljcejmifcjmabingpkbdafbmkdphkdehojjillnlgmlcofcjkkedafgbppagadndcndcfpgningekdfpljldafhaoonnaogomjfamecoiikojkenakadafimhmgcdlojmenhmggoocglbgkencfdafjllgmpcdfnfncdlipmbeadmjnnnjgdafkcehbgfbahfnbkghlejnnlkcghlbedafkcikcmjnlkediachidfoebdbibbjcdaflgbdappmhpkkcjfmjhaddalpmkmamdaflhdlcccfhdmilfjjapjnacnakmndgdafmaenllkieccdlaooicchjbgcemmiadafmggekhpfmnpeklidoijmbmghmabhedafofcdiamndflhjcpfdgljbfjmohmgldafonpddipkcifhfclieddaolflfmcmodafpjjcebinmibdjclajfkhfjflfmemkdafpjoocjgjdiceohbghmiibddffodjgdafplfbeldomkekefdfnlkakegplbjlodagadhcdeheadmgkaaeebgkomjfajmcgdagbdjbjdalkcknfbdpbnaglcjnldlpedagcamgbpiljcgbjdlddgpdkhcbnkndgdagdicmanenkpcbjipdgeflkiejnbeekdagebaphncbniknigdkhmgcplaggcpamdagekgoebmjjclffkbcbgedolcnlhdlhdagfmmlkheemopphejfoacofnonbilpgdaggljbnodnjpheeehankkjbmgcknojldaghbnohfjeoopopipkakljmeihboamndaghcojebhaflfmkcfolcgppkencmdcidagjdjfgamhakfonlgjpflkbciffbppldaglcojfoblldhedhhegjejhjeiifighdagmaapgjbkmhcjlnmcgecbeckifgjindagmdppbpfcgkmjchjhjnoplngbfbihkdagnbnicahlfgaibhnkdgbgjgelcgkegdagndekfgnflbncigmbdabnnoilcinlmdagpohpgmbnledgommjioifomibedblkdahajiomeopboegmecigpckimcpnkkendahaogmkkmbpipdmlifjmoefejjajlghdahbbdcokahkpbdmklgidaekclpbjacedahbjjklddbmedadmmkcijibgjignjiedahclclahmgddmcjnbbnmejhlkmfconndahdickpdfjboccnllpgobjjejkjkfppdahfoghdidjpbhndfcpanbfmaebgmleldahicicggnchenhmkooommcpahhdgfgedahihppclcibjkfaikbfpnjpblkekkhbdahjadciklcmobhekajnlbgldmleaeldda  àÿêòëîàÿ 	ÿ‘#–/–/–/ÿ‘"–"–"–"ÿàLàLàLÿàE		 êò†4–(—(‘(àÿ‘–+–+–+ÿ‘–––ÿ 	ÿàLàLàLÿà‡  àÿêòëîàÿ 	ÿàLàLàL¯ÿàVêCòt–$—$‘$ÄFÿ ÿààààà r   c                 ÛL   ó t          ||¶  ´        j        }t          | |¶  ´        S )uY  
    ‚ÄúPull‚Äù-based encoder.

    :param input: An iterable of Unicode strings.
    :param encoding: An :class:`Encoding` object or a label string.
    :param errors: Type of error handling. See :func:`codecs.register`.
    :raises: :exc:`~exceptions.LookupError` for an unknown encoding label.
    :returns: An iterable of byte strings.

    )⁄IncrementalEncoderr
   ⁄_iter_encode_generator)r3   r   r5   r
   s       r   ⁄iter_encoderP   ˆ   s&   Ä ı  †®&—1‘1‘8ÄF›!†%®—0‘0–0r   c              #   Û`   K  ó | D ]} ||¶  ´        }|r|V ó å |dd¨¶  ´        }|r|V ó d S d S )N⁄ TrH   r/   )r3   r
   rK   rL   s       r   rO   rO     sg   Ë Ë Ä ÿ  àÿêòëîàÿ 	ÿàLàLàL¯ÿàVêBòd–#—#‘#ÄFÿ ÿààààà r   c                   Û"   ó e Zd ZdZddÑZddÑZdS )	rA   uO  
    ‚ÄúPush‚Äù-based decoder.

    :param fallback_encoding:
        An :class:`Encoding` object or a label string.
        The encoding to use if :obj:`input` does note have a BOM.
    :param errors: Type of error handling. See :func:`codecs.register`.
    :raises: :exc:`~exceptions.LookupError` for an unknown encoding label.

    r0   c                 Ûf   ó t          |¶  ´        | _        || _        d| _        d | _        d | _        d S )Nr   )r#   ⁄_fallback_encoding⁄_errors⁄_buffer⁄_decoderr   )r'   r4   r5   s      r   r(   zIncrementalDecoder.__init__  s5   Ä Â"/–0A—"B‘"Bà‘ÿàåÿàåÿàå
 àåààr   Fc                 Û.  ó | j         }|Å |||¶  ´        S | j        |z   }t          |¶  ´        \  }}|Ä%t          |¶  ´        dk     r|s	|| _        dS | j        }|j        †                    | j        ¶  ´        j        }|| _         || _	         |||¶  ´        S )z˘Decode one chunk of the input.

        :param input: A byte string.
        :param final:
            Indicate that no more input is available.
            Must be :obj:`True` if this is the last call.
        :returns: An Unicode string.

        Nr9   rR   )
rX   rW   r2   ⁄lenrU   r   ⁄incrementaldecoderrV   r   r   )r'   r3   rI   rD   r   s        r   r   zIncrementalDecoder.decode'  s®   Ä  î-àÿ–ÿê7ò5†%—(‘(–(‡îòu—$à›%†e—,‘,âàê%ÿ–›ê5âzåzòAä~à~†eà~ÿ$êîÿêr‡‘2êÿ‘%◊8“8∏º—F‘F‘Màÿàåÿ àåÿàwêuòe—$‘$–$r   N©r0   )F)r+   r,   r-   r.   r(   r   r/   r   r   rA   rA     sF   Ä Ä Ä Ä Ä 	 	
 
 
 
% % % % % %r   rA   c                   Û   ó e Zd ZdZedfdÑZdS )rN   u˘  
    ‚ÄúPush‚Äù-based encoder.

    :param encoding: An :class:`Encoding` object or a label string.
    :param errors: Type of error handling. See :func:`codecs.register`.
    :raises: :exc:`~exceptions.LookupError` for an unknown encoding label.

    .. method:: encode(input, final=False)

        :param input: An Unicode string.
        :param final:
            Indicate that no more input is available.
            Must be :obj:`True` if this is the last call.
        :returns: A byte string.

    r>   c                 Ûl   ó t          |¶  ´        }|j        †                    |¶  ´        j        | _        d S r&   )r#   r   ⁄incrementalencoderr
   )r'   r   r5   s      r   r(   zIncrementalEncoder.__init__T  s.   Ä › †—*‘*àÿ‘)◊<“<∏V—D‘D‘Kàåààr   N)r+   r,   r-   r.   r=   r(   r/   r   r   rN   rN   C  s?   Ä Ä Ä Ä Ä    !%®X L L L L L Lr   rN   r\   )r.   ⁄
__future__r   r   ⁄labelsr   ⁄VERSIONr   r   r   r   r#   ⁄objectr   r=   r;   r<   r   r2   r
   rF   rB   rP   rO   rA   rN   r/   r   r   ˙<module>rd      sÁ    (– '– '– '– '– '‡ ÄÄÄ‡ – – – – –  Ä
 !ÿ$ÿÿ	 Ä 	Ä8 8 84  <  $+ + + + +àvÒ +Ù + +0 ÄvàgÅÑÄ‡à6ê*—‘Äÿà6ê*—‘ÄB B B B,    ® G G G G   8  @ !%®X 1 1 1 1   0% 0% 0% 0% 0%òÒ 0%Ù 0% 0%fL L L L LòÒ LÙ L L L Lr   